/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 20000.0;
	SIMULATION_TIME = 20000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CAL_PULSE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DOUTFL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DOUTFL[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFL[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFL";
}

SIGNAL("DOUTFR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DOUTFR[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTFR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTFR";
}

SIGNAL("DOUTL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DOUTL[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DOUTR[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DOUTR";
}

SIGNAL("nFS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("CAL_PULSE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7.544;
		LEVEL 1 FOR 10358.711;
		LEVEL 0 FOR 9619.865;
		LEVEL 1 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFL[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 5271.44;
		LEVEL 1 FOR 9589.687;
		LEVEL 0 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFL[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 5271.44;
		LEVEL 1 FOR 9589.687;
		LEVEL 0 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFL[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 5271.44;
		LEVEL 1 FOR 9589.687;
		LEVEL 0 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFL[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 5271.44;
		LEVEL 1 FOR 9589.687;
		LEVEL 0 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFL[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 5271.44;
		LEVEL 1 FOR 9589.687;
		LEVEL 0 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFL[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 5271.44;
		LEVEL 1 FOR 9589.687;
		LEVEL 0 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFL[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 5271.44;
		LEVEL 1 FOR 9589.687;
		LEVEL 0 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFL[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1305.0;
		LEVEL 1 FOR 18681.12;
		LEVEL 0 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFL[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1305.0;
		LEVEL 0 FOR 3819.993;
		LEVEL 1 FOR 1920.007;
		LEVEL 0 FOR 3351.433;
		LEVEL 1 FOR 9603.567;
	}
}

TRANSITION_LIST("DOUTFL[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1305.0;
		LEVEL 0 FOR 2230.0;
		LEVEL 1 FOR 1589.993;
		LEVEL 0 FOR 1920.007;
		LEVEL 1 FOR 2240.0;
		LEVEL 0 FOR 1111.433;
		LEVEL 1 FOR 9603.567;
	}
}

TRANSITION_LIST("DOUTFL[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 185.0;
		LEVEL 1 FOR 1120.0;
		LEVEL 0 FOR 1120.0;
		LEVEL 1 FOR 1110.0;
		LEVEL 0 FOR 1120.0;
		LEVEL 1 FOR 1270.0;
		LEVEL 0 FOR 1120.0;
		LEVEL 1 FOR 1120.0;
		LEVEL 0 FOR 1120.0;
		LEVEL 1 FOR 10701.12;
		LEVEL 0 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFL[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 185.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 560.0;
			LEVEL 1 FOR 560.0;
		}
		LEVEL 0 FOR 550.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 469.993;
		LEVEL 1 FOR 250.007;
		LEVEL 0 FOR 550.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 560.0;
			LEVEL 0 FOR 560.0;
		}
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 551.433;
		LEVEL 1 FOR 9589.687;
		LEVEL 0 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFL[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 185.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 280.0;
			LEVEL 1 FOR 280.0;
		}
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 270.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 280.0;
			LEVEL 1 FOR 280.0;
		}
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 189.993;
		LEVEL 0 FOR 250.007;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 270.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 280.0;
			LEVEL 0 FOR 280.0;
		}
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 271.433;
		LEVEL 1 FOR 9589.687;
		LEVEL 0 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFL[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 140.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 130.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 140.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 140.0;
		}
		LEVEL 0 FOR 130.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 140.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL 1 FOR 9861.12;
		LEVEL 0 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFL[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 45.0;
		NODE
		{
			REPEAT = 19;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 70.0;
		}
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 16;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 70.0;
		}
		LEVEL 0 FOR 49.993;
		LEVEL 1 FOR 40.007;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 70.0;
		}
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 31;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 70.0;
		}
		LEVEL 0 FOR 201.433;
		LEVEL 1 FOR 9603.567;
	}
}

TRANSITION_LIST("DOUTFL[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 45.0;
		NODE
		{
			REPEAT = 39;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 33;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 30.0;
		}
		NODE
		{
			REPEAT = 52;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 171.433;
		LEVEL 1 FOR 9589.687;
		LEVEL 0 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFL[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 13;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 27;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 25;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 26;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 26;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 9741.12;
		LEVEL 1 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFL[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 9741.12;
		LEVEL 0 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFL[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 6;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 40.0;
			}
			LEVEL 1 FOR 30.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 40.0;
			}
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 40.0;
			}
			LEVEL 0 FOR 30.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 40.0;
			}
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 50.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 40.0;
			}
			LEVEL 0 FOR 30.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 40.0;
			}
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 9770.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("DOUTFL[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 19.993;
		LEVEL 0 FOR 10.007;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9751.12;
		LEVEL 1 FOR 8.88;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("DOUTFL[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 0 FOR 10.0;
					LEVEL 1 FOR 10.0;
				}
				LEVEL 0 FOR 20.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 1 FOR 10.0;
					LEVEL 0 FOR 10.0;
				}
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 1 FOR 10.0;
					LEVEL 0 FOR 10.0;
				}
			}
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 0 FOR 10.0;
					LEVEL 1 FOR 10.0;
				}
				LEVEL 0 FOR 20.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 1 FOR 10.0;
					LEVEL 0 FOR 10.0;
				}
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 1 FOR 10.0;
					LEVEL 0 FOR 10.0;
				}
			}
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 0 FOR 10.0;
					LEVEL 1 FOR 10.0;
				}
				LEVEL 0 FOR 20.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 1 FOR 10.0;
					LEVEL 0 FOR 10.0;
				}
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 1 FOR 10.0;
					LEVEL 0 FOR 10.0;
				}
			}
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 0 FOR 10.0;
					LEVEL 1 FOR 10.0;
				}
				LEVEL 0 FOR 20.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 1 FOR 10.0;
					LEVEL 0 FOR 10.0;
				}
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 1 FOR 10.0;
					LEVEL 0 FOR 10.0;
				}
			}
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 0 FOR 10.0;
					LEVEL 1 FOR 10.0;
				}
				LEVEL 0 FOR 20.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 1 FOR 10.0;
					LEVEL 0 FOR 10.0;
				}
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 1 FOR 10.0;
					LEVEL 0 FOR 10.0;
				}
			}
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 151.433;
		LEVEL 1 FOR 9603.567;
	}
}

TRANSITION_LIST("DOUTFL[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 30.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 30.0;
			}
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 70.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 30.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 30.0;
			}
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 30.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 30.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 30.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 30.0;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 30.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 30.0;
			}
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 9765.0;
	}
}

TRANSITION_LIST("DOUTFL[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 9760.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("DOUTFL[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 9750.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("DOUTFR[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 8205.0;
		LEVEL 0 FOR 11795.0;
	}
}

TRANSITION_LIST("DOUTFR[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1665.0;
		LEVEL 1 FOR 1239.663;
		LEVEL 0 FOR 2040.337;
		LEVEL 1 FOR 3260.0;
		LEVEL 0 FOR 2712.008;
		LEVEL 1 FOR 9082.992;
	}
}

TRANSITION_LIST("DOUTFR[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1665.0;
		LEVEL 0 FOR 1239.663;
		LEVEL 1 FOR 2040.337;
		LEVEL 0 FOR 3060.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 11795.0;
	}
}

TRANSITION_LIST("DOUTFR[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1665.0;
		LEVEL 0 FOR 1740.0;
		LEVEL 1 FOR 1540.0;
		LEVEL 0 FOR 1530.0;
		LEVEL 1 FOR 1530.0;
		LEVEL 0 FOR 7.345;
		LEVEL 1 FOR 192.655;
		LEVEL 0 FOR 2712.008;
		LEVEL 1 FOR 9082.992;
	}
}

TRANSITION_LIST("DOUTFR[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 585.0;
		LEVEL 1 FOR 1080.0;
		LEVEL 0 FOR 1070.0;
		LEVEL 1 FOR 670.0;
		LEVEL 0 FOR 770.0;
		LEVEL 1 FOR 770.0;
		LEVEL 0 FOR 760.0;
		LEVEL 1 FOR 770.0;
		LEVEL 0 FOR 770.0;
		LEVEL 1 FOR 760.0;
		LEVEL 0 FOR 7.345;
		LEVEL 1 FOR 192.655;
		LEVEL 0 FOR 1070.0;
		LEVEL 1 FOR 10725.0;
	}
}

TRANSITION_LIST("DOUTFR[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 540.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 530.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 290.0;
		LEVEL 1 FOR 380.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 380.0;
			LEVEL 1 FOR 390.0;
		}
		LEVEL 0 FOR 380.0;
		LEVEL 1 FOR 380.0;
		LEVEL 0 FOR 390.0;
		LEVEL 1 FOR 380.0;
		LEVEL 0 FOR 380.0;
		LEVEL 1 FOR 390.0;
		LEVEL 0 FOR 380.0;
		LEVEL 1 FOR 380.0;
		LEVEL 0 FOR 7.345;
		LEVEL 1 FOR 192.655;
		LEVEL 0 FOR 540.0;
		LEVEL 1 FOR 530.0;
		LEVEL 0 FOR 540.0;
		LEVEL 1 FOR 1102.008;
		LEVEL 0 FOR 9082.992;
	}
}

TRANSITION_LIST("DOUTFR[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 45.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 270.0;
			LEVEL 1 FOR 270.0;
		}
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 270.0;
		LEVEL 0 FOR 270.0;
		LEVEL 1 FOR 270.0;
		LEVEL 0 FOR 169.663;
		LEVEL 1 FOR 120.337;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 190.0;
			LEVEL 1 FOR 190.0;
		}
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 190.0;
			LEVEL 0 FOR 190.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 200.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 190.0;
				LEVEL 1 FOR 190.0;
			}
			LEVEL 0 FOR 190.0;
		}
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 190.0;
			LEVEL 1 FOR 190.0;
		}
		LEVEL 0 FOR 7.345;
		LEVEL 1 FOR 192.655;
		LEVEL 0 FOR 270.0;
		LEVEL 1 FOR 270.0;
		LEVEL 0 FOR 270.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 270.0;
		LEVEL 1 FOR 270.0;
		LEVEL 0 FOR 270.0;
		LEVEL 1 FOR 9915.0;
	}
}

TRANSITION_LIST("DOUTFR[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 45.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 130.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 130.0;
			LEVEL 1 FOR 140.0;
		}
		LEVEL 0 FOR 130.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 130.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL 1 FOR 130.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 39.663;
		LEVEL 0 FOR 20.337;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 90.0;
		}
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 90.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 100.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 100.0;
				LEVEL 1 FOR 90.0;
			}
			LEVEL 0 FOR 100.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 100.0;
				LEVEL 0 FOR 90.0;
			}
		}
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 90.0;
		}
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 90.0;
		}
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 90.0;
		}
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 130.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 130.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 130.0;
			LEVEL 1 FOR 140.0;
		}
		LEVEL 0 FOR 130.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 130.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL 1 FOR 130.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 9785.0;
	}
}

TRANSITION_LIST("DOUTFR[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 70.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 70.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 70.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 70.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 70.0;
		}
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 39.663;
		LEVEL 1 FOR 20.337;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 50.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 50.0;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 50.0;
			}
			LEVEL 0 FOR 50.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 40.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 0 FOR 50.0;
					LEVEL 1 FOR 50.0;
				}
				LEVEL 0 FOR 40.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 1 FOR 50.0;
					LEVEL 0 FOR 50.0;
				}
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 50.0;
				LEVEL 0 FOR 50.0;
			}
			LEVEL 1 FOR 40.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 50.0;
				LEVEL 1 FOR 50.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 7.345;
		LEVEL 1 FOR 62.655;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 70.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 70.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 70.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 702.008;
		LEVEL 1 FOR 9082.992;
	}
}

TRANSITION_LIST("DOUTFR[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 30.0;
			}
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 30.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 30.0;
			}
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 30.0;
			}
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 30.0;
			}
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 30.0;
			}
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 30.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 30.0;
			}
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 30.0;
			}
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 9771.12;
		LEVEL 1 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFR[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 20.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 1 FOR 10.0;
					LEVEL 0 FOR 10.0;
				}
				LEVEL 1 FOR 20.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 0 FOR 10.0;
					LEVEL 1 FOR 10.0;
				}
			}
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 682.008;
		LEVEL 0 FOR 9082.992;
	}
}

TRANSITION_LIST("DOUTFR[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 5;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 5;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 5;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			NODE
			{
				REPEAT = 23;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 30.0;
			}
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 5;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 5;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 5;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 672.008;
		LEVEL 0 FOR 9069.112;
		LEVEL 1 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFR[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 20.0;
			}
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 20;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 24;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 24;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 23;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 7.345;
		LEVEL 1 FOR 12.655;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 20.0;
			}
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 672.008;
		LEVEL 0 FOR 9082.992;
	}
}

TRANSITION_LIST("DOUTFR[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 9.663;
		LEVEL 0 FOR 10.337;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			NODE
			{
				REPEAT = 12;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 12;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 12;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 10.0;
			NODE
			{
				REPEAT = 11;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 12;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 10.0;
			NODE
			{
				REPEAT = 12;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 7.345;
		LEVEL 0 FOR 2.655;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 672.008;
		LEVEL 1 FOR 9069.112;
		LEVEL 0 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 30.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 1 FOR 20.0;
					LEVEL 0 FOR 20.0;
				}
			}
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 30.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 0 FOR 20.0;
					LEVEL 1 FOR 20.0;
				}
			}
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 7.345;
		LEVEL 1 FOR 2.655;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 682.008;
		LEVEL 0 FOR 9069.112;
		LEVEL 1 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				NODE
				{
					REPEAT = 5;
					LEVEL 1 FOR 10.0;
					LEVEL 0 FOR 10.0;
				}
				LEVEL 1 FOR 10.0;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				NODE
				{
					REPEAT = 3;
					LEVEL 1 FOR 10.0;
					LEVEL 0 FOR 20.0;
				}
				LEVEL 1 FOR 10.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 0 FOR 10.0;
					LEVEL 1 FOR 20.0;
				}
			}
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				NODE
				{
					REPEAT = 3;
					LEVEL 0 FOR 10.0;
					LEVEL 1 FOR 20.0;
				}
				LEVEL 0 FOR 10.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 1 FOR 10.0;
					LEVEL 0 FOR 20.0;
				}
			}
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				NODE
				{
					REPEAT = 3;
					LEVEL 1 FOR 10.0;
					LEVEL 0 FOR 20.0;
				}
				LEVEL 1 FOR 10.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 0 FOR 10.0;
					LEVEL 1 FOR 20.0;
				}
			}
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 7.345;
		LEVEL 0 FOR 2.655;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				NODE
				{
					REPEAT = 5;
					LEVEL 0 FOR 10.0;
					LEVEL 1 FOR 10.0;
				}
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 672.008;
		LEVEL 1 FOR 9082.992;
	}
}

TRANSITION_LIST("DOUTFR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 45.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 60.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 70.0;
				LEVEL 1 FOR 70.0;
			}
			LEVEL 0 FOR 60.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 70.0;
				LEVEL 0 FOR 70.0;
			}
			LEVEL 1 FOR 60.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 70.0;
				LEVEL 1 FOR 70.0;
			}
		}
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 70.0;
			LEVEL 0 FOR 70.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 69.663;
		LEVEL 0 FOR 10.337;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
			}
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 17.345;
		LEVEL 0 FOR 42.655;
		LEVEL 1 FOR 70.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 60.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 70.0;
				LEVEL 1 FOR 70.0;
			}
		}
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 70.0;
			LEVEL 0 FOR 70.0;
		}
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 70.0;
		}
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 70.0;
			LEVEL 0 FOR 70.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 9765.0;
	}
}

TRANSITION_LIST("DOUTFR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 40.0;
			}
			LEVEL 1 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 40.0;
			}
			LEVEL 0 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 40.0;
			}
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 40.0;
			}
			LEVEL 0 FOR 30.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 40.0;
			}
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 682.008;
		LEVEL 1 FOR 9082.992;
	}
}

TRANSITION_LIST("DOUTFR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 9751.12;
		LEVEL 1 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTFR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 9750.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("DOUTFR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 30.0;
			}
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 30.0;
			}
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 30.0;
			}
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 30.0;
			}
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 30.0;
			}
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 30.0;
			}
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 30.0;
			}
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 30.0;
			}
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 30.0;
			}
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 30.0;
			}
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 30.0;
				LEVEL 1 FOR 30.0;
			}
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 9775.0;
	}
}

TRANSITION_LIST("DOUTFR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				NODE
				{
					REPEAT = 3;
					LEVEL 0 FOR 10.0;
					LEVEL 1 FOR 20.0;
				}
				LEVEL 0 FOR 10.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 1 FOR 10.0;
					LEVEL 0 FOR 20.0;
				}
			}
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 31;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 31;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 31;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 31;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 31;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 17;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 9765.0;
	}
}

TRANSITION_LIST("DOUTFR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 290.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 9750.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("DOUTFR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 130.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 10.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 20.0;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 9760.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("DOUTL[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 14875.007;
	}
}

TRANSITION_LIST("DOUTL[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 14875.007;
	}
}

TRANSITION_LIST("DOUTL[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 14875.007;
	}
}

TRANSITION_LIST("DOUTL[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 14875.007;
	}
}

TRANSITION_LIST("DOUTL[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 14875.007;
	}
}

TRANSITION_LIST("DOUTL[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 14875.007;
	}
}

TRANSITION_LIST("DOUTL[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 14875.007;
	}
}

TRANSITION_LIST("DOUTL[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5124.993;
		LEVEL 1 FOR 5271.44;
		LEVEL 0 FOR 9603.567;
	}
}

TRANSITION_LIST("DOUTL[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 14861.127;
		LEVEL 1 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTL[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 14861.127;
		LEVEL 1 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTL[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5124.993;
		LEVEL 1 FOR 5271.44;
		LEVEL 0 FOR 9603.567;
	}
}

TRANSITION_LIST("DOUTL[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 14875.007;
	}
}

TRANSITION_LIST("DOUTL[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 14875.007;
	}
}

TRANSITION_LIST("DOUTL[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5124.993;
		LEVEL 1 FOR 5271.44;
		LEVEL 0 FOR 9603.567;
	}
}

TRANSITION_LIST("DOUTL[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 14861.127;
		LEVEL 1 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTL[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5124.993;
		LEVEL 0 FOR 14861.127;
		LEVEL 1 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTL[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5124.993;
		LEVEL 1 FOR 5271.44;
		LEVEL 0 FOR 9603.567;
	}
}

TRANSITION_LIST("DOUTL[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5124.993;
		LEVEL 1 FOR 5271.44;
		LEVEL 0 FOR 9589.687;
		LEVEL 1 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTL[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5124.993;
		LEVEL 1 FOR 5271.44;
		LEVEL 0 FOR 9603.567;
	}
}

TRANSITION_LIST("DOUTL[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5124.993;
		LEVEL 1 FOR 5271.44;
		LEVEL 0 FOR 9589.687;
		LEVEL 1 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTL[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10396.433;
		LEVEL 0 FOR 9603.567;
	}
}

TRANSITION_LIST("DOUTL[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("DOUTL[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("DOUTL[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("DOUTR[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10917.008;
		LEVEL 0 FOR 9082.992;
	}
}

TRANSITION_LIST("DOUTR[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("DOUTR[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2904.663;
		LEVEL 0 FOR 5107.682;
		LEVEL 1 FOR 2904.663;
		LEVEL 0 FOR 9082.992;
	}
}

TRANSITION_LIST("DOUTR[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10917.008;
		LEVEL 0 FOR 9082.992;
	}
}

TRANSITION_LIST("DOUTR[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("DOUTR[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2904.663;
		LEVEL 1 FOR 5107.682;
		LEVEL 0 FOR 11987.655;
	}
}

TRANSITION_LIST("DOUTR[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2904.663;
		LEVEL 0 FOR 5107.682;
		LEVEL 1 FOR 2904.663;
		LEVEL 0 FOR 9082.992;
	}
}

TRANSITION_LIST("DOUTR[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10917.008;
		LEVEL 0 FOR 9082.992;
	}
}

TRANSITION_LIST("DOUTR[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2904.663;
		LEVEL 0 FOR 5107.682;
		LEVEL 1 FOR 2904.663;
		LEVEL 0 FOR 9082.992;
	}
}

TRANSITION_LIST("DOUTR[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 19986.12;
		LEVEL 1 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTR[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10917.008;
		LEVEL 0 FOR 9082.992;
	}
}

TRANSITION_LIST("DOUTR[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10917.008;
		LEVEL 0 FOR 9082.992;
	}
}

TRANSITION_LIST("DOUTR[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 19986.12;
		LEVEL 1 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTR[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2904.663;
		LEVEL 0 FOR 5107.682;
		LEVEL 1 FOR 2904.663;
		LEVEL 0 FOR 9069.112;
		LEVEL 1 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 19986.12;
		LEVEL 1 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("DOUTR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2904.663;
		LEVEL 0 FOR 5107.682;
		LEVEL 1 FOR 2904.663;
		LEVEL 0 FOR 9082.992;
	}
}

TRANSITION_LIST("DOUTR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10917.008;
		LEVEL 0 FOR 9082.992;
	}
}

TRANSITION_LIST("DOUTR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 19986.12;
		LEVEL 1 FOR 13.88;
	}
}

TRANSITION_LIST("DOUTR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("DOUTR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("DOUTR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("DOUTR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("DOUTR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("nFS")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2000;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "nFS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CAL_PULSE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
	CHILDREN = 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 52;
	TREE_LEVEL = 0;
	CHILDREN = 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFL[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR";
	EXPAND_STATUS = EXPANDED;
	RADIX = Signed;
	TREE_INDEX = 77;
	TREE_LEVEL = 0;
	CHILDREN = 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTFR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 77;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 2905794;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 5125102;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 10248612;
	MASTER = FALSE;
}
;
