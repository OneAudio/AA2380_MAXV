/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000000.0;
	SIMULATION_TIME = 1000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("BUSYL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("BUSYR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CK128FS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CLOCK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DOUTL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DOUTL[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DOUTR[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("FS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("FS[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "FS";
}

SIGNAL("FS[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "FS";
}

SIGNAL("Fso")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("nCNVL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("nCNVR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("nFS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SCK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SDOL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SDOR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("BUSYL")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 342.0;
		LEVEL 1 FOR 128.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 512.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 512.0;
		LEVEL 1 FOR 44.537;
		LEVEL 0 FOR 595.463;
		LEVEL 1 FOR 255.615;
		LEVEL 0 FOR 384.385;
		LEVEL 1 FOR 128.0;
		NODE
		{
			REPEAT = 258;
			LEVEL 0 FOR 512.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 512.0;
		LEVEL 1 FOR 128.0;
		NODE
		{
			REPEAT = 721;
			LEVEL 0 FOR 512.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 512.0;
		LEVEL 1 FOR 128.0;
		NODE
		{
			REPEAT = 74;
			LEVEL 0 FOR 512.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 74.499;
		LEVEL 1 FOR 41.962;
		LEVEL 0 FOR 79.879;
		LEVEL 1 FOR 37.917;
		LEVEL 0 FOR 277.743;
		LEVEL 1 FOR 128.0;
		NODE
		{
			REPEAT = 499;
			LEVEL 0 FOR 512.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 490.0;
	}
}

TRANSITION_LIST("BUSYR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 342.0;
		LEVEL 1 FOR 128.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 512.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 512.0;
		LEVEL 1 FOR 169.135;
		LEVEL 0 FOR 470.865;
		LEVEL 1 FOR 128.0;
		NODE
		{
			REPEAT = 260;
			LEVEL 0 FOR 512.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 512.0;
		LEVEL 1 FOR 128.0;
		NODE
		{
			REPEAT = 721;
			LEVEL 0 FOR 512.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 512.0;
		LEVEL 1 FOR 128.0;
		NODE
		{
			REPEAT = 74;
			LEVEL 0 FOR 512.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 74.499;
		LEVEL 1 FOR 41.962;
		LEVEL 0 FOR 79.879;
		LEVEL 1 FOR 37.917;
		LEVEL 0 FOR 277.743;
		LEVEL 1 FOR 128.0;
		NODE
		{
			REPEAT = 499;
			LEVEL 0 FOR 512.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 490.0;
	}
}

TRANSITION_LIST("CK128FS")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 88.0;
		NODE
		{
			REPEAT = 1561;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 3124;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 6250;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 12499;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 2.0;
	}
}

TRANSITION_LIST("CLOCK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100000;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 2.0;
		}
	}
}

TRANSITION_LIST("DOUTL[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTL[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTL[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTL[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTL[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTL[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 183358.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 133120.0;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 285440.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 362242.0;
	}
}

TRANSITION_LIST("DOUTL[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 183358.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 133120.0;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 285440.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 362242.0;
	}
}

TRANSITION_LIST("DOUTL[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 183358.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 133120.0;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 285440.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 362242.0;
	}
}

TRANSITION_LIST("DOUTL[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 183358.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 133120.0;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 285440.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 362242.0;
	}
}

TRANSITION_LIST("DOUTL[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTL[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTL[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTL[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTL[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 183358.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 428800.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 362242.0;
	}
}

TRANSITION_LIST("DOUTL[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 183358.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 428800.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 362242.0;
	}
}

TRANSITION_LIST("DOUTL[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 183358.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 428800.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 362242.0;
	}
}

TRANSITION_LIST("DOUTL[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 183358.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 428800.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 362242.0;
	}
}

TRANSITION_LIST("DOUTL[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTL[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTL[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTL[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTL[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 183358.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 133120.0;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 285440.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 362242.0;
	}
}

TRANSITION_LIST("DOUTL[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 183358.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 133120.0;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 285440.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 362242.0;
	}
}

TRANSITION_LIST("DOUTL[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTR[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTR[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTR[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTR[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTR[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTR[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 183358.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 133120.0;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 652802.0;
	}
}

TRANSITION_LIST("DOUTR[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 183358.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 133120.0;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 652802.0;
	}
}

TRANSITION_LIST("DOUTR[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 183358.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 133120.0;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 652802.0;
	}
}

TRANSITION_LIST("DOUTR[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 183358.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 133120.0;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 652802.0;
	}
}

TRANSITION_LIST("DOUTR[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTR[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTR[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTR[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTR[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 336958.0;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 285440.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 362242.0;
	}
}

TRANSITION_LIST("DOUTR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 336958.0;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 285440.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 362242.0;
	}
}

TRANSITION_LIST("DOUTR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 336958.0;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 285440.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 362242.0;
	}
}

TRANSITION_LIST("DOUTR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 336958.0;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 285440.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 362242.0;
	}
}

TRANSITION_LIST("DOUTR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("DOUTR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 183358.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 133120.0;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 285440.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 362242.0;
	}
}

TRANSITION_LIST("DOUTR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 183358.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 133120.0;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 285440.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 362242.0;
	}
}

TRANSITION_LIST("DOUTR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("enable")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000000.0;
	}
}

TRANSITION_LIST("FS[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 500000.0;
			LEVEL 1 FOR 500000.0;
		}
	}
}

TRANSITION_LIST("FS[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 250000.0;
			LEVEL 1 FOR 250000.0;
		}
	}
}

TRANSITION_LIST("Fso")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.0;
		LEVEL 1 FOR 19200.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 19840.0;
		}
		NODE
		{
			REPEAT = 24;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 9600.0;
		}
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 13440.0;
		NODE
		{
			REPEAT = 47;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 4480.0;
		}
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 6400.0;
		NODE
		{
			REPEAT = 96;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 1920.0;
		}
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 1282.0;
	}
}

TRANSITION_LIST("nCNVL")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 338.0;
		NODE
		{
			REPEAT = 1561;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 600.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 582.0;
	}
}

TRANSITION_LIST("nCNVR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 338.0;
		NODE
		{
			REPEAT = 1561;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 600.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 582.0;
	}
}

TRANSITION_LIST("nFS")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 318.0;
		NODE
		{
			REPEAT = 1562;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 2.0;
	}
}

TRANSITION_LIST("SCK")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 548.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 500.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 540.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 460.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 620.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 380.0;
		NODE
		{
			REPEAT = 22;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 500.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 500.0;
		NODE
		{
			REPEAT = 10;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 1140.0;
			NODE
			{
				REPEAT = 30;
				NODE
				{
					REPEAT = 3;
					LEVEL 1 FOR 20.0;
					LEVEL 0 FOR 20.0;
				}
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 500.0;
			}
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1140.0;
		NODE
		{
			REPEAT = 30;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 500.0;
		}
		NODE
		{
			REPEAT = 24;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 1140.0;
			NODE
			{
				REPEAT = 14;
				NODE
				{
					REPEAT = 3;
					LEVEL 1 FOR 20.0;
					LEVEL 0 FOR 20.0;
				}
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 500.0;
			}
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1140.0;
		NODE
		{
			REPEAT = 20;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 500.0;
		}
		NODE
		{
			REPEAT = 34;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 1140.0;
			NODE
			{
				REPEAT = 6;
				NODE
				{
					REPEAT = 3;
					LEVEL 1 FOR 20.0;
					LEVEL 0 FOR 20.0;
				}
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 500.0;
			}
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 500.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 500.0;
		NODE
		{
			REPEAT = 12;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 1140.0;
			NODE
			{
				REPEAT = 6;
				NODE
				{
					REPEAT = 3;
					LEVEL 1 FOR 20.0;
					LEVEL 0 FOR 20.0;
				}
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 500.0;
			}
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1140.0;
		NODE
		{
			REPEAT = 8;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 500.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 500.0;
		NODE
		{
			REPEAT = 96;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 1140.0;
			NODE
			{
				REPEAT = 2;
				NODE
				{
					REPEAT = 3;
					LEVEL 1 FOR 20.0;
					LEVEL 0 FOR 20.0;
				}
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 500.0;
			}
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1140.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 500.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 272.0;
	}
}

TRANSITION_LIST("SDOL")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 164403.436;
		LEVEL 1 FOR 642.095;
		LEVEL 0 FOR 619.587;
		LEVEL 1 FOR 642.327;
		LEVEL 0 FOR 642.324;
		LEVEL 1 FOR 77.541;
		LEVEL 0 FOR 318.44;
		LEVEL 1 FOR 16043.364;
		LEVEL 0 FOR 144835.352;
		LEVEL 1 FOR 642.095;
		LEVEL 0 FOR 1920.154;
		LEVEL 1 FOR 77.541;
		LEVEL 0 FOR 298172.155;
		LEVEL 1 FOR 642.095;
		LEVEL 0 FOR 635.503;
		LEVEL 1 FOR 642.327;
		LEVEL 0 FOR 642.324;
		LEVEL 1 FOR 77.541;
		LEVEL 0 FOR 368323.799;
	}
}

TRANSITION_LIST("SDOR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 164403.436;
		LEVEL 1 FOR 642.095;
		LEVEL 0 FOR 1904.238;
		LEVEL 1 FOR 77.541;
		LEVEL 0 FOR 318.44;
		LEVEL 1 FOR 16043.364;
		LEVEL 0 FOR 144835.352;
		LEVEL 1 FOR 642.095;
		LEVEL 0 FOR 635.503;
		LEVEL 1 FOR 642.327;
		LEVEL 0 FOR 642.324;
		LEVEL 1 FOR 77.541;
		LEVEL 0 FOR 299449.753;
		LEVEL 1 FOR 642.327;
		LEVEL 0 FOR 642.324;
		LEVEL 1 FOR 77.541;
		LEVEL 0 FOR 368323.799;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLOCK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CK128FS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
	CHILDREN = 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "FS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 53;
	TREE_LEVEL = 0;
	CHILDREN = 54, 55;
}

DISPLAY_LINE
{
	CHANNEL = "FS[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "FS[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "Fso";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 56;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nCNVL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 57;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nCNVR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 58;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nFS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 59;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SCK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SDOL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 61;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SDOR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 62;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "BUSYL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 63;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "BUSYR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 64;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 35000;
	MASTER = TRUE;
}
;
